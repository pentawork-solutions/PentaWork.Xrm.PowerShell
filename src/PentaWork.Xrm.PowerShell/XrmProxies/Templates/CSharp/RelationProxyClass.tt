<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Microsoft.Xrm.Sdk.Metadata" #>
<#@ import namespace="PentaWork.Xrm.PowerShell.XrmProxies.Model" #>
using System;
using Microsoft.Xrm.Sdk; 
using Microsoft.Xrm.Sdk.Client;

namespace <#= ProxyNamespace #>.Relations
{
	/// <summary> 
	/// <#= RelationClassInfo.SchemaName #> 
	/// </summary>
	[Relation]
	[EntityLogicalName("<#= RelationClassInfo.IntersectEntityName #>")]
	public sealed class <#= RelationClassInfo.UniqueIntersectDisplayName #> : <#= UseBaseProxy ? "BaseProxy" : "Entity" #>
	{		
<#		if(UseBaseProxy)
		{ #>
		public <#= RelationClassInfo.UniqueIntersectDisplayName #>() : base(new Entity("<#= RelationClassInfo.IntersectEntityName #>")) { }

		public <#= RelationClassInfo.UniqueIntersectDisplayName #>(Entity entity) : base(entity) { }
<#		} else { #>
		public <#= RelationClassInfo.UniqueIntersectDisplayName #>() : base("<#= RelationClassInfo.IntersectEntityName #>") { }
<#		}#>

		[AttributeLogicalName("<#= RelationClassInfo.Entity1Attribute #>")]
		public Guid <#= RelationClassInfo.UniqueEntity1AttributeName #>
		{	
			get { return GetAttributeValue<Guid>("<#= RelationClassInfo.Entity1Attribute #>"); }
			set { <#= UseBaseProxy ? "SetAttributeValueTracked" : "SetAttributeValue" #>("<#= RelationClassInfo.Entity1Attribute #>", value); }
		}

		[AttributeLogicalName("<#= RelationClassInfo.Entity2Attribute #>")]
		public Guid <#= RelationClassInfo.UniqueEntity2AttributeName #>
		{	
			get { return GetAttributeValue<Guid>("<#= RelationClassInfo.Entity2Attribute #>"); }
			set { <#= UseBaseProxy ? "SetAttributeValueTracked" : "SetAttributeValue" #>("<#= RelationClassInfo.Entity2Attribute #>", value); }
		}
	}
}

<#+
public ManyToManyRelationInfo RelationClassInfo { get; set; }
public string ProxyNamespace { get; set; }
public bool UseBaseProxy { get; set; }
#>