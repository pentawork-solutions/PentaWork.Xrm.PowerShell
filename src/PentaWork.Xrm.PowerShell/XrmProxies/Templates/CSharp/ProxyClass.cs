// ------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion: 17.0.0.0
//  
//     Änderungen an dieser Datei können fehlerhaftes Verhalten verursachen und gehen verloren, wenn
//     der Code neu generiert wird.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace PentaWork.Xrm.PowerShell.XrmProxies.Templates.CSharp
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Microsoft.Xrm.Sdk.Metadata;
    using PentaWork.Xrm.PowerShell.XrmProxies.Model;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class ProxyClass : ProxyClassBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("using System;\r\nusing System.Linq;\r\nusing System.Diagnostics;\r\nusing System.Compon" +
                    "entModel;\r\nusing Microsoft.Xrm.Sdk; \r\nusing Microsoft.Xrm.Sdk.Client;\r\nusing Sys" +
                    "tem.Collections.Generic;\r\n\r\nnamespace ");
            
            #line 16 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ProxyNamespace));
            
            #line default
            #line hidden
            this.Write(".Entities\r\n{\r\n");
            
            #line 18 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
	if(EntityInfo.PrimaryNameAttribute != null) { 
            
            #line default
            #line hidden
            this.Write("\t[DebuggerDisplay(\"{");
            
            #line 19 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityInfo.PrimaryNameAttribute.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write("}\")] ");
            
            #line 19 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
 }

            
            #line default
            #line hidden
            this.Write("\t\r\n\t[EntityLogicalName(\"");
            
            #line 21 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityInfo.LogicalName));
            
            #line default
            #line hidden
            this.Write("\")]\r\n\tpublic sealed class ");
            
            #line 22 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityInfo.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write(" : ");
            
            #line 22 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(UseBaseProxy ? "BaseProxy" : "Entity"));
            
            #line default
            #line hidden
            this.Write("\r\n\t{\t\r\n\t\tpublic static readonly int? EntityTypeCode = ");
            
            #line 24 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityInfo.TypeCode));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\tpublic new const string LogicalName = \"");
            
            #line 25 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityInfo.LogicalName));
            
            #line default
            #line hidden
            this.Write("\";\r\n\t\tpublic ");
            
            #line 26 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(UseBaseProxy ? "new " : ""));
            
            #line default
            #line hidden
            this.Write("const string PrimaryIdAttribute = \"");
            
            #line 26 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityInfo.PrimaryIdAttribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\";\r\n\t\tpublic ");
            
            #line 27 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(UseBaseProxy ? "new " : ""));
            
            #line default
            #line hidden
            this.Write("const string PrimaryNameAttribute = \"");
            
            #line 27 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityInfo.PrimaryNameAttribute != null ? EntityInfo.PrimaryNameAttribute.LogicalName : string.Empty));
            
            #line default
            #line hidden
            this.Write("\";\r\n\t\r\n");
            
            #line 29 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
		if(UseBaseProxy)
		{ 
            
            #line default
            #line hidden
            this.Write("\t\tpublic ");
            
            #line 31 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityInfo.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write("() : base(new Entity(\"");
            
            #line 31 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityInfo.LogicalName));
            
            #line default
            #line hidden
            this.Write("\")) { }\r\n\r\n\t\tpublic ");
            
            #line 33 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityInfo.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write("(Entity entity) : base(entity) { }\r\n");
            
            #line 34 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
		} else { 
            
            #line default
            #line hidden
            this.Write("\t\tpublic ");
            
            #line 35 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityInfo.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write("() : base(\"");
            
            #line 35 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityInfo.LogicalName));
            
            #line default
            #line hidden
            this.Write("\") { }\r\n");
            
            #line 36 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
		}
            
            #line default
            #line hidden
            this.Write("\r\n\t\t#region Attributes\r\n");
            
            #line 39 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
		foreach(var attribute in EntityInfo.AttributeList)
		{
			var attType = attribute.AttributeType;
            switch (attType)
            { 				
				case AttributeTypeCode.Money:
					var moneyMetadata = (MoneyAttributeMetadata) attribute.AttributeMetadata; 
            
            #line default
            #line hidden
            this.Write("\t\t/// <summary>\r\n        /// ");
            
            #line 47 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t///\r\n\t\t/// Precision: ");
            
            #line 49 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(moneyMetadata.Precision));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t/// MaxValue: ");
            
            #line 50 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(moneyMetadata.MaxValue));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t/// MinValue: ");
            
            #line 51 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(moneyMetadata.MinValue));
            
            #line default
            #line hidden
            this.Write("\r\n        /// </summary>\r\n\t\t[DisplayName(\"");
            
            #line 53 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.AttributeMetadata.DisplayName.GetLabel(attribute.AttributeMetadata.LogicalName)));
            
            #line default
            #line hidden
            this.Write("\")]\r\n\t\t[AttributeLogicalName(\"");
            
            #line 54 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\")]\r\n\t\tpublic decimal? ");
            
            #line 55 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t{\t\r\n\t\t\tget { return GetAttributeValue<Money>(\"");
            
            #line 57 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\")?.Value; }\r\n\t\t\tset \r\n\t\t\t{\r\n\t\t\t\tMoney moneyValue = null;\r\n\t\t\t\tif(value != null) " +
                    "\r\n\t\t\t\t{\r\n\t\t\t\t\tvar roundedValue = Decimal.Round(value.Value, ");
            
            #line 63 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(moneyMetadata.Precision));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\t\tmoneyValue = new Money(roundedValue);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(Attributes.Contai" +
                    "nsKey(\"");
            
            #line 67 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\") && moneyValue?.Value == ");
            
            #line 67 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write(") return;\r\n\t\t\t\t");
            
            #line 68 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(UseBaseProxy ? "SetAttributeValueTracked" : "SetAttributeValue"));
            
            #line default
            #line hidden
            this.Write("(\"");
            
            #line 68 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\", moneyValue);  \r\n\t\t\t}\r\n\t\t}\r\n\r\n");
            
            #line 72 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
					break;
				case AttributeTypeCode.Decimal:
					var decimalMetadata = (DecimalAttributeMetadata) attribute.AttributeMetadata; 
            
            #line default
            #line hidden
            this.Write("\t\t/// <summary>\r\n        /// ");
            
            #line 76 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t///\r\n\t\t/// Precision: ");
            
            #line 78 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(decimalMetadata.Precision));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t/// MaxValue: ");
            
            #line 79 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(decimalMetadata.MaxValue));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t/// MinValue: ");
            
            #line 80 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(decimalMetadata.MinValue));
            
            #line default
            #line hidden
            this.Write("\r\n        /// </summary>\r\n\t\t[DisplayName(\"");
            
            #line 82 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.AttributeMetadata.DisplayName.GetLabel(attribute.AttributeMetadata.LogicalName)));
            
            #line default
            #line hidden
            this.Write("\")]\r\n\t\t[AttributeLogicalName(\"");
            
            #line 83 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\")]\r\n\t\tpublic decimal? ");
            
            #line 84 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t{\t\r\n\t\t\tget { return GetAttributeValue<decimal?>(\"");
            
            #line 86 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\"); }\r\n\t\t\tset \r\n\t\t\t{\r\n\t\t\t\tdecimal? decimalValue = null;\r\n\t\t\t\tif(value != null) de" +
                    "cimalValue = Decimal.Round(value.Value, ");
            
            #line 90 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(decimalMetadata.Precision));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\tif(Attributes.ContainsKey(\"");
            
            #line 91 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\") && decimalValue == ");
            
            #line 91 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write(") return;\r\n\t\t\t\t");
            
            #line 92 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(UseBaseProxy ? "SetAttributeValueTracked" : "SetAttributeValue"));
            
            #line default
            #line hidden
            this.Write("(\"");
            
            #line 92 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\", decimalValue);  \r\n\t\t\t}\r\n\t\t}\r\n\r\n");
            
            #line 96 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
					break;
				case AttributeTypeCode.Double:
					var doubleMetadata = (DoubleAttributeMetadata) attribute.AttributeMetadata; 
            
            #line default
            #line hidden
            this.Write("\t\t/// <summary>\r\n        /// ");
            
            #line 100 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t///\r\n\t\t/// Precision: ");
            
            #line 102 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(doubleMetadata.Precision));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t/// MaxValue: ");
            
            #line 103 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(doubleMetadata.MaxValue));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t/// MinValue: ");
            
            #line 104 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(doubleMetadata.MinValue));
            
            #line default
            #line hidden
            this.Write("\r\n        /// </summary>\r\n\t\t[DisplayName(\"");
            
            #line 106 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.AttributeMetadata.DisplayName.GetLabel(attribute.AttributeMetadata.LogicalName)));
            
            #line default
            #line hidden
            this.Write("\")]\r\n\t\t[AttributeLogicalName(\"");
            
            #line 107 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\")]\r\n\t\tpublic double? ");
            
            #line 108 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t{\t\r\n\t\t\tget { return GetAttributeValue<double?>(\"");
            
            #line 110 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\"); }\r\n\t\t\tset \r\n\t\t\t{\r\n\t\t\t\tdouble? doubleValue = null;\r\n\t\t\t\tif(value != null) doub" +
                    "leValue = Math.Round(value.Value, ");
            
            #line 114 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(doubleMetadata.Precision));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\tif(Attributes.ContainsKey(\"");
            
            #line 115 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\") && doubleValue == ");
            
            #line 115 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write(") return;\r\n\t\t\t\t");
            
            #line 116 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(UseBaseProxy ? "SetAttributeValueTracked" : "SetAttributeValue"));
            
            #line default
            #line hidden
            this.Write("(\"");
            
            #line 116 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\", doubleValue);  \r\n\t\t\t}\r\n\t\t}\r\n\r\n");
            
            #line 120 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
					break;
                case AttributeTypeCode.Picklist:
				case AttributeTypeCode.Status:
				case AttributeTypeCode.State:
            
            #line default
            #line hidden
            this.Write("\t\t/// <summary>\r\n        /// ");
            
            #line 125 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\r\n        /// </summary>\r\n\t\t[DisplayName(\"");
            
            #line 127 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.AttributeMetadata.DisplayName.GetLabel(attribute.AttributeMetadata.LogicalName)));
            
            #line default
            #line hidden
            this.Write("\")]\r\n\t\t[AttributeLogicalName(\"");
            
            #line 128 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\")]\r\n\t\tpublic ");
            
            #line 129 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.ReturnType));
            
            #line default
            #line hidden
            this.Write("? ");
            
            #line 129 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t{\t\r\n\t\t\tget \r\n\t\t\t{ \r\n\t\t\t\tvar optionSetValue = GetAttributeValue<OptionSetValue" +
                    ">(\"");
            
            #line 133 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\");\r\n\t\t\t\tif (optionSetValue != null) return (");
            
            #line 134 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.ReturnType));
            
            #line default
            #line hidden
            this.Write(")optionSetValue.Value;\r\n\t\t\t\telse return null;\r\n\t\t\t}\r\n\t\t\tset \r\n\t\t\t{ \r\n\t\t\t\tif(Attri" +
                    "butes.ContainsKey(\"");
            
            #line 139 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\") && value == ");
            
            #line 139 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write(") return;\r\n\r\n\t\t\t\tOptionSetValue optionSetValue = null;\r\n\t\t\t\tif(value != null) opt" +
                    "ionSetValue = new OptionSetValue((int)value);\r\n\t\t\t\t");
            
            #line 143 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(UseBaseProxy ? "SetAttributeValueTracked" : "SetAttributeValue"));
            
            #line default
            #line hidden
            this.Write("(\"");
            
            #line 143 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\", optionSetValue); \r\n\t\t\t}\r\n\t\t}\r\n\r\n");
            
            #line 147 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
                  break;
				case AttributeTypeCode.Virtual:
					if(attribute.AttributeMetadata is MultiSelectPicklistAttributeMetadata multiSelect)
					{ 
            
            #line default
            #line hidden
            this.Write("\t\t/// <summary>\r\n        /// ");
            
            #line 152 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\r\n        /// </summary>\r\n\t\t[DisplayName(\"");
            
            #line 154 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.AttributeMetadata.DisplayName.GetLabel(attribute.AttributeMetadata.LogicalName)));
            
            #line default
            #line hidden
            this.Write("\")]\r\n\t\t[AttributeLogicalName(\"");
            
            #line 155 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\")]\r\n\t\tpublic List<");
            
            #line 156 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.ReturnType));
            
            #line default
            #line hidden
            this.Write("> ");
            
            #line 156 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t{\t\r\n\t\t\tget \r\n\t\t\t{ \r\n\t\t\t\tvar optionSetCollection = GetAttributeValue<OptionSet" +
                    "ValueCollection>(\"");
            
            #line 160 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\");\r\n\t\t\t\tif (optionSetCollection != null) return optionSetCollection.Select(o => " +
                    "(");
            
            #line 161 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.ReturnType));
            
            #line default
            #line hidden
            this.Write(")o.Value).ToList();\r\n\t\t\t\telse return new List<");
            
            #line 162 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.ReturnType));
            
            #line default
            #line hidden
            this.Write(">();\r\n\t\t\t}\r\n\t\t\tset \r\n\t\t\t{ \r\n\t\t\t\tvar firstNotSecond = value.Except(");
            
            #line 166 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write(").ToList();\r\n\t\t\t\tvar secondNotFirst = ");
            
            #line 167 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write(".Except(value).ToList();\r\n\t\t\t\tif (!firstNotSecond.Any() && !secondNotFirst.Any())" +
                    " return;\r\n\r\n\t\t\t\t");
            
            #line 170 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(UseBaseProxy ? "SetAttributeValueTracked" : "SetAttributeValue"));
            
            #line default
            #line hidden
            this.Write("(\"");
            
            #line 170 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\", new OptionSetValueCollection(value.Select(v => new OptionSetValue((int)v)).ToL" +
                    "ist()));\r\n\t\t\t}\r\n\t\t}\r\n");
            
            #line 173 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
					}
					break;
				default: 
					if(attribute.LogicalName == EntityInfo.PrimaryIdAttribute.LogicalName) { 
            
            #line default
            #line hidden
            this.Write("\t\t/// <summary>\r\n        /// ");
            
            #line 178 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\r\n        /// </summary>\r\n\t\t[DisplayName(\"");
            
            #line 180 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.AttributeMetadata.DisplayName.GetLabel(attribute.AttributeMetadata.LogicalName)));
            
            #line default
            #line hidden
            this.Write("\")]\r\n\t\t[AttributeLogicalName(\"");
            
            #line 181 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\")]\r\n\t\tpublic override Guid Id\r\n\t\t{\r\n\t\t\tget => base.Id;\r\n\t\t\tset { base.Id = value" +
                    "; SetAttributeValue(\"");
            
            #line 185 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\", value); }\r\n\t\t}\r\n\r\n\t\t\t\t\t");
            
            #line 188 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
 }  else { 
            
            #line default
            #line hidden
            this.Write("\t\t/// <summary>\r\n        /// ");
            
            #line 190 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\r\n        /// </summary>\r\n\t\t[DisplayName(\"");
            
            #line 192 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.AttributeMetadata.DisplayName.GetLabel(attribute.AttributeMetadata.LogicalName)));
            
            #line default
            #line hidden
            this.Write("\")]\r\n\t\t[AttributeLogicalName(\"");
            
            #line 193 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\")]\r\n\t\tpublic ");
            
            #line 194 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.ReturnType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 194 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t{\t\r\n\t\t\tget { return GetAttributeValue<");
            
            #line 196 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.ReturnType));
            
            #line default
            #line hidden
            this.Write(">(\"");
            
            #line 196 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\"); }\r\n\t\t\tset\r\n\t\t\t{ \r\n\t\t\t\tif(Attributes.ContainsKey(\"");
            
            #line 199 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\") && value == ");
            
            #line 199 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write(") return;\r\n\t\t\t\t");
            
            #line 200 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(UseBaseProxy ? "SetAttributeValueTracked" : "SetAttributeValue"));
            
            #line default
            #line hidden
            this.Write("(\"");
            
            #line 200 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\", value);\r\n\t\t\t}\r\n\t\t}\t\r\n\t\t\t\r\n");
            
            #line 204 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
              }    
				break;
            }
		}
            
            #line default
            #line hidden
            this.Write("\t\t#endregion\t\r\n\r\n\t\t#region Relations\r\n\t");
            
            #line 211 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
		foreach(var relation in EntityInfo.OneToManyRelationList)
		{ 
			var relatedClassInfo = relation.RelatedEntityInfo; 
            
            #line default
            #line hidden
            this.Write("\t\t/// <summary>\r\n        /// 1:N Get entities for \'");
            
            #line 215 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.SchemaName));
            
            #line default
            #line hidden
            this.Write("\'\r\n        /// </summary>\r\n\t\t[RelationshipSchemaName(\"");
            
            #line 217 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.SchemaName));
            
            #line default
            #line hidden
            this.Write("\")]\r\n\t\tpublic IEnumerable<");
            
            #line 218 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relatedClassInfo.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write("> ");
            
            #line 218 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t{\r\n\t\t\tget { return GetRelatedEntities<");
            
            #line 220 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relatedClassInfo.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write(">(\"");
            
            #line 220 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.SchemaName));
            
            #line default
            #line hidden
            this.Write("\", null); }\r\n\t\t\tset { SetRelatedEntities(\"");
            
            #line 221 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.SchemaName));
            
            #line default
            #line hidden
            this.Write("\", null, value); }\r\n\t\t}\r\n");
            
            #line 223 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
		}

		foreach(var relation in EntityInfo.ManyToManyRelationList)
		{ 
			var relatedClassInfo = relation.RelatedEntityInfo; 
            
            #line default
            #line hidden
            this.Write("\t\t/// <summary>\r\n        /// N:N Get entities for \'");
            
            #line 229 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relatedClassInfo.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write("\'\r\n        /// </summary>\r\n\t\t[RelationshipSchemaName(\"");
            
            #line 231 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.SchemaName));
            
            #line default
            #line hidden
            this.Write("\")]\r\n\t\tpublic IEnumerable<");
            
            #line 232 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.RelatedEntityInfo.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write("> ");
            
            #line 232 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t{\r\n\t\t\tget { return GetRelatedEntities<");
            
            #line 234 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.RelatedEntityInfo.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write(">(\"");
            
            #line 234 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.SchemaName));
            
            #line default
            #line hidden
            this.Write("\", null); }\r\n\t\t\tset { SetRelatedEntities(\"");
            
            #line 235 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.SchemaName));
            
            #line default
            #line hidden
            this.Write("\", null, value); }\r\n\t\t}\r\n");
            
            #line 237 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
		} 
            
            #line default
            #line hidden
            this.Write("\t\t#endregion\r\n\r\n\t\t#region Actions\r\n");
            
            #line 241 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
		foreach(var action in EntityInfo.ActionList)
		{ 
            
            #line default
            #line hidden
            this.Write("\t\tpublic OrganizationResponse Execute");
            
            #line 243 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(action.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write("(OrganizationServiceContext serviceContext)\r\n\t\t{\r\n\t\t\tvar orgRequest = new Organiz" +
                    "ationRequest(\"");
            
            #line 245 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(action.SdkMessageName));
            
            #line default
            #line hidden
            this.Write("\");\r\n\t\t\torgRequest[\"Target\"] = ToEntityReference();\r\n            return serviceCo" +
                    "ntext.Execute(orgRequest);\r\n\t\t}\r\n");
            
            #line 249 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
		} 
            
            #line default
            #line hidden
            this.Write("\t\t#endregion\r\n\r\n\t\t#region OptionSetEnums\r\n");
            
            #line 253 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
		foreach(var optionSetInfo in EntityInfo.OptionSetList) {
        var optionSetTemplate = new OptionSet { OptionSetInfo = optionSetInfo }; 
            
            #line default
            #line hidden
            
            #line 255 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(optionSetTemplate.TransformText()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 256 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
		} 
            
            #line default
            #line hidden
            this.Write("\t\t#endregion\t\r\n\r\n\t\t#region Properties\r\n\t\tpublic static class Properties \r\n\t\t{\r\n");
            
            #line 262 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
		foreach(var attribute in EntityInfo.AttributeList){ 
            
            #line default
            #line hidden
            this.Write("\t\t\t/// <summary>");
            
            #line 263 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("</summary>\r\n\t\t\tpublic const string ");
            
            #line 264 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write(" = \"");
            
            #line 264 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.LogicalName));
            
            #line default
            #line hidden
            this.Write("\";\r\n\r\n");
            
            #line 266 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
		} 
            
            #line default
            #line hidden
            this.Write("\t\t}\r\n\t\t#endregion\r\n\r\n\t\t#region Schemas\r\n\t\tpublic static class Schemas \r\n\t\t{\r\n");
            
            #line 273 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
		foreach(var relation in EntityInfo.OneToManyRelationList){ 
            
            #line default
            #line hidden
            this.Write("\t\t\t/// <summary>1:N ");
            
            #line 274 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.SchemaName));
            
            #line default
            #line hidden
            this.Write("</summary>\r\n\t\t\tpublic const string ");
            
            #line 275 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write(" = \"");
            
            #line 275 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.SchemaName));
            
            #line default
            #line hidden
            this.Write("\";\r\n\r\n");
            
            #line 277 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
		} 
            
            #line default
            #line hidden
            
            #line 278 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
		foreach(var relation in EntityInfo.ManyToManyRelationList){ 
            
            #line default
            #line hidden
            this.Write("\t\t\t/// <summary>N:N ");
            
            #line 279 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.SchemaName));
            
            #line default
            #line hidden
            this.Write("</summary>\r\n\t\t\tpublic const string ");
            
            #line 280 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.UniqueDisplayName));
            
            #line default
            #line hidden
            this.Write(" = \"");
            
            #line 280 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.SchemaName));
            
            #line default
            #line hidden
            this.Write("\";\r\n\r\n");
            
            #line 282 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"
		} 
            
            #line default
            #line hidden
            this.Write("\t\t}\r\n\t\t#endregion\r\n\t}\r\n}\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 288 "C:\Users\GerritGazic\Github\PentaWork.Xrm.PowerShell\src\PentaWork.Xrm.PowerShell\XrmProxies\Templates\CSharp\ProxyClass.tt"

public EntityInfo EntityInfo { get; set; }
public string ProxyNamespace { get; set; }
public bool UseBaseProxy { get; set; }

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public class ProxyClassBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        public System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
